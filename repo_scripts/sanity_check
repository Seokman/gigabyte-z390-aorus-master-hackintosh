#!/bin/bash

DOWNLOAD_URL=https://github.com/rlerdorf/OCSanity/archive/master.zip
OUTPUT_HTML=/tmp/sanity-results.html
CONFIG_PATH=/Volumes/EFI/EFI/OC/config.plist
DEFAULT_CPU=cometlake

which brew > /dev/null 2>&1
if [ $? -ne 0 ]; then
    echo "Error: Homebrew is required."
    exit 1
fi

while [[ "$#" -gt 0 ]]; do
    case $1 in
        -v|--version) VERSION="$2"; shift ;;
        -c|--cpu)     CPU="$2"; shift ;;
        -h|--help)
          echo "Usage:"
          echo "./sanity_check --version 0.6.1  # target a specific version. Defaults to latest version"
          echo "./sanity_check --cpu cometlake  # for specific CPU architecture. Defaults to: '$DEFAULT_CPU'"
          exit 1 ;;
        *) echo "Unknown parameter passed: $1"; exit 1 ;;
    esac
    shift
done

if [ -z "$VERSION" ]; then
  VERSION=`curl --silent "https://api.github.com/repos/acidanthera/OpenCorePkg/releases/latest" | jq -r .tag_name`
fi

if [ -z "$CPU" ]; then
  CPU=$DEFAULT_CPU
fi

echo "----------------------------------"
echo " OpenCore Sanity Check"
echo " Version: $VERSION"
echo " Architecture: $CPU"
echo "----------------------------------"

which composer > /dev/null && which jq > /dev/null 2>&1
if [ $? -ne 0 ]; then
    echo "Installing dependencies..."
    brew install composer jq > /dev/null 2>&1
fi

if [ ! -d "/tmp/OCSanity-master" ]; then
  echo "Fetching latest OCSanity..."
  cd /tmp
  rm -f master.zip
  rm -fr OCSanity-master
  rm -f sanity-results.md
  rm -f sanity-results.html
  wget $DOWNLOAD_URL > /dev/null 2>&1
  unzip master.zip > /dev/null 2>&1
  cd OCSanity-master
  composer install > /dev/null 2>&1
else
  cd /tmp/OCSanity-master
fi

RULES_FILE=`ls -r -l -1 rules/$CPU${VERSION//.}*.lst | head -1`

HTML=$(cat <<EOF
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.12.1/css/all.min.css"
    type="text/css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.4.1/css/bootstrap.min.css"
    type="text/css">
  <link rel="stylesheet" href="https://opencore.slowgeek.com/main.css" type="text/css">

  <style>
    li > span.good { display: none; }
    body { background-color: #fff; margin: 5em;}
  </style>
EOF
)


if [ -f "$CONFIG_PATH" ]; then
  echo $HTML > $OUTPUT_HTML
  echo "Generating report..."
  ./ocs -r $RULES_FILE $CONFIG_PATH >> $OUTPUT_HTML
  open $OUTPUT_HTML
  echo "Done!"
else
  echo "OpenCore EFI does not seem to be mounted. Aborting."
  exit 1
fi